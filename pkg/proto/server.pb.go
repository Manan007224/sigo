// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ClientConfig struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string         `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Queues               []*QueueConfig `protobuf:"bytes,3,rep,name=queues,proto3" json:"queues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ClientConfig) Reset()         { *m = ClientConfig{} }
func (m *ClientConfig) String() string { return proto.CompactTextString(m) }
func (*ClientConfig) ProtoMessage()    {}
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *ClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConfig.Unmarshal(m, b)
}
func (m *ClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConfig.Marshal(b, m, deterministic)
}
func (m *ClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConfig.Merge(m, src)
}
func (m *ClientConfig) XXX_Size() int {
	return xxx_messageInfo_ClientConfig.Size(m)
}
func (m *ClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConfig proto.InternalMessageInfo

func (m *ClientConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ClientConfig) GetQueues() []*QueueConfig {
	if m != nil {
		return m.Queues
	}
	return nil
}

type QueueConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Priority             int32    `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueConfig) Reset()         { *m = QueueConfig{} }
func (m *QueueConfig) String() string { return proto.CompactTextString(m) }
func (*QueueConfig) ProtoMessage()    {}
func (*QueueConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *QueueConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueConfig.Unmarshal(m, b)
}
func (m *QueueConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueConfig.Marshal(b, m, deterministic)
}
func (m *QueueConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueConfig.Merge(m, src)
}
func (m *QueueConfig) XXX_Size() int {
	return xxx_messageInfo_QueueConfig.Size(m)
}
func (m *QueueConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueConfig.DiscardUnknown(m)
}

var xxx_messageInfo_QueueConfig proto.InternalMessageInfo

func (m *QueueConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueueConfig) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type Execution struct {
	Expiry               int64    `protobuf:"varint,1,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Execution) Reset()         { *m = Execution{} }
func (m *Execution) String() string { return proto.CompactTextString(m) }
func (*Execution) ProtoMessage()    {}
func (*Execution) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *Execution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Execution.Unmarshal(m, b)
}
func (m *Execution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Execution.Marshal(b, m, deterministic)
}
func (m *Execution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Execution.Merge(m, src)
}
func (m *Execution) XXX_Size() int {
	return xxx_messageInfo_Execution.Size(m)
}
func (m *Execution) XXX_DiscardUnknown() {
	xxx_messageInfo_Execution.DiscardUnknown(m)
}

var xxx_messageInfo_Execution proto.InternalMessageInfo

func (m *Execution) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

type JobPayload struct {
	Jid                  string            `protobuf:"bytes,1,opt,name=jid,proto3" json:"jid,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Args                 map[string]*Param `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retry                int32             `protobuf:"varint,4,opt,name=retry,proto3" json:"retry,omitempty"`
	EnqueueAt            int64             `protobuf:"varint,6,opt,name=enqueue_at,json=enqueueAt,proto3" json:"enqueue_at,omitempty"`
	ReserveFor           int64             `protobuf:"varint,7,opt,name=reserve_for,json=reserveFor,proto3" json:"reserve_for,omitempty"`
	Queue                string            `protobuf:"bytes,8,opt,name=queue,proto3" json:"queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *JobPayload) Reset()         { *m = JobPayload{} }
func (m *JobPayload) String() string { return proto.CompactTextString(m) }
func (*JobPayload) ProtoMessage()    {}
func (*JobPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *JobPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobPayload.Unmarshal(m, b)
}
func (m *JobPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobPayload.Marshal(b, m, deterministic)
}
func (m *JobPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobPayload.Merge(m, src)
}
func (m *JobPayload) XXX_Size() int {
	return xxx_messageInfo_JobPayload.Size(m)
}
func (m *JobPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_JobPayload.DiscardUnknown(m)
}

var xxx_messageInfo_JobPayload proto.InternalMessageInfo

func (m *JobPayload) GetJid() string {
	if m != nil {
		return m.Jid
	}
	return ""
}

func (m *JobPayload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobPayload) GetArgs() map[string]*Param {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *JobPayload) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *JobPayload) GetEnqueueAt() int64 {
	if m != nil {
		return m.EnqueueAt
	}
	return 0
}

func (m *JobPayload) GetReserveFor() int64 {
	if m != nil {
		return m.ReserveFor
	}
	return 0
}

func (m *JobPayload) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

type Param struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Param) Reset()         { *m = Param{} }
func (m *Param) String() string { return proto.CompactTextString(m) }
func (*Param) ProtoMessage()    {}
func (*Param) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *Param) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Param.Unmarshal(m, b)
}
func (m *Param) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Param.Marshal(b, m, deterministic)
}
func (m *Param) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Param.Merge(m, src)
}
func (m *Param) XXX_Size() int {
	return xxx_messageInfo_Param.Size(m)
}
func (m *Param) XXX_DiscardUnknown() {
	xxx_messageInfo_Param.DiscardUnknown(m)
}

var xxx_messageInfo_Param proto.InternalMessageInfo

func (m *Param) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Param) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Queue struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Queue) Reset()         { *m = Queue{} }
func (m *Queue) String() string { return proto.CompactTextString(m) }
func (*Queue) ProtoMessage()    {}
func (*Queue) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *Queue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queue.Unmarshal(m, b)
}
func (m *Queue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queue.Marshal(b, m, deterministic)
}
func (m *Queue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queue.Merge(m, src)
}
func (m *Queue) XXX_Size() int {
	return xxx_messageInfo_Queue.Size(m)
}
func (m *Queue) XXX_DiscardUnknown() {
	xxx_messageInfo_Queue.DiscardUnknown(m)
}

var xxx_messageInfo_Queue proto.InternalMessageInfo

func (m *Queue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Job struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type FailPayload struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	ErrorType            string   `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
	Retry                int32    `protobuf:"varint,4,opt,name=retry,proto3" json:"retry,omitempty"`
	Backtrace            []string `protobuf:"bytes,5,rep,name=backtrace,proto3" json:"backtrace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailPayload) Reset()         { *m = FailPayload{} }
func (m *FailPayload) String() string { return proto.CompactTextString(m) }
func (*FailPayload) ProtoMessage()    {}
func (*FailPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *FailPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailPayload.Unmarshal(m, b)
}
func (m *FailPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailPayload.Marshal(b, m, deterministic)
}
func (m *FailPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailPayload.Merge(m, src)
}
func (m *FailPayload) XXX_Size() int {
	return xxx_messageInfo_FailPayload.Size(m)
}
func (m *FailPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_FailPayload.DiscardUnknown(m)
}

var xxx_messageInfo_FailPayload proto.InternalMessageInfo

func (m *FailPayload) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FailPayload) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *FailPayload) GetErrorType() string {
	if m != nil {
		return m.ErrorType
	}
	return ""
}

func (m *FailPayload) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *FailPayload) GetBacktrace() []string {
	if m != nil {
		return m.Backtrace
	}
	return nil
}

type Ping struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{8}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Pong struct {
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientConfig)(nil), "protobuf.ClientConfig")
	proto.RegisterType((*QueueConfig)(nil), "protobuf.QueueConfig")
	proto.RegisterType((*Execution)(nil), "protobuf.Execution")
	proto.RegisterType((*JobPayload)(nil), "protobuf.JobPayload")
	proto.RegisterMapType((map[string]*Param)(nil), "protobuf.JobPayload.ArgsEntry")
	proto.RegisterType((*Param)(nil), "protobuf.Param")
	proto.RegisterType((*Queue)(nil), "protobuf.Queue")
	proto.RegisterType((*Job)(nil), "protobuf.Job")
	proto.RegisterType((*FailPayload)(nil), "protobuf.FailPayload")
	proto.RegisterType((*Ping)(nil), "protobuf.Ping")
	proto.RegisterType((*Pong)(nil), "protobuf.Pong")
}

func init() {
	proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7)
}

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 576 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0x6e, 0xec, 0x38, 0x6f, 0x3c, 0x8e, 0xde, 0xa2, 0x55, 0x5b, 0x59, 0x69, 0x81, 0x6a, 0x11,
	0x52, 0x2f, 0xa4, 0x10, 0x0e, 0x20, 0xa0, 0x87, 0x36, 0x24, 0xaa, 0x2a, 0x21, 0x05, 0xc3, 0xbd,
	0xda, 0xd8, 0x13, 0xd7, 0xc4, 0xf1, 0x86, 0xf5, 0x3a, 0xd4, 0xbf, 0x83, 0x2b, 0xff, 0x91, 0xbf,
	0x80, 0xbc, 0xfe, 0x24, 0x4a, 0x2a, 0x71, 0xb2, 0xe7, 0x99, 0xcf, 0x67, 0x9e, 0x1d, 0xe8, 0xc5,
	0x28, 0xd6, 0x28, 0x06, 0x2b, 0xc1, 0x25, 0x27, 0x5d, 0xf5, 0x99, 0x25, 0xf3, 0xfe, 0xb1, 0xcf,
	0xb9, 0x1f, 0xe2, 0x79, 0x09, 0x9c, 0xe3, 0x72, 0x25, 0xd3, 0x3c, 0x8c, 0x32, 0xe8, 0x8d, 0xc2,
	0x00, 0x23, 0x39, 0xe2, 0xd1, 0x3c, 0xf0, 0xc9, 0xff, 0xa0, 0x05, 0x9e, 0xdd, 0x3a, 0x6d, 0x9d,
	0x99, 0x8e, 0x16, 0x78, 0x84, 0x40, 0x5b, 0xa6, 0x2b, 0xb4, 0x35, 0x85, 0xa8, 0x7f, 0xf2, 0x02,
	0x3a, 0xdf, 0x13, 0x4c, 0x30, 0xb6, 0xf5, 0x53, 0xfd, 0xcc, 0x1a, 0x1e, 0x0e, 0xca, 0xd2, 0x83,
	0xcf, 0x19, 0x9e, 0x97, 0x72, 0x8a, 0x20, 0x7a, 0x01, 0x56, 0x03, 0xce, 0x2a, 0x46, 0x6c, 0x89,
	0x45, 0x0f, 0xf5, 0x4f, 0xfa, 0xd0, 0x5d, 0x89, 0x80, 0x8b, 0x40, 0xa6, 0xaa, 0x93, 0xe1, 0x54,
	0x36, 0x7d, 0x06, 0xe6, 0xf8, 0x1e, 0xdd, 0x44, 0x06, 0x3c, 0x22, 0x47, 0xd0, 0xc1, 0xfb, 0x55,
	0x20, 0x52, 0x95, 0xae, 0x3b, 0x85, 0x45, 0x7f, 0x69, 0x00, 0x37, 0x7c, 0x36, 0x65, 0x69, 0xc8,
	0x99, 0x47, 0x1e, 0x81, 0xfe, 0xad, 0xa2, 0x91, 0xfd, 0x56, 0x5d, 0xb5, 0x46, 0xd7, 0x21, 0xb4,
	0x99, 0xf0, 0x4b, 0x16, 0x4f, 0x6a, 0x16, 0x75, 0xa5, 0xc1, 0xa5, 0xf0, 0xe3, 0x71, 0x24, 0x45,
	0xea, 0xa8, 0x58, 0x72, 0x00, 0x86, 0x40, 0x29, 0x52, 0xbb, 0xad, 0xc6, 0xcc, 0x0d, 0xf2, 0x18,
	0x00, 0x23, 0x45, 0xf7, 0x96, 0x49, 0xbb, 0xa3, 0x46, 0x33, 0x0b, 0xe4, 0x52, 0x92, 0xa7, 0x60,
	0x09, 0x54, 0xea, 0xdc, 0xce, 0xb9, 0xb0, 0xff, 0x53, 0x7e, 0x28, 0xa0, 0x09, 0x17, 0x59, 0x55,
	0x15, 0x6b, 0x77, 0xd5, 0x78, 0xb9, 0xd1, 0xbf, 0x06, 0xb3, 0x6a, 0x9f, 0x51, 0x5a, 0x60, 0x5a,
	0x52, 0x5a, 0x60, 0x4a, 0x9e, 0x83, 0xb1, 0x66, 0x61, 0x92, 0x73, 0xb2, 0x86, 0xfb, 0xf5, 0xfc,
	0x53, 0x26, 0xd8, 0xd2, 0xc9, 0xbd, 0xef, 0xb4, 0xb7, 0x2d, 0xfa, 0x0a, 0x0c, 0x85, 0x55, 0x72,
	0xb6, 0x1a, 0x72, 0x1e, 0x34, 0xeb, 0xf4, 0x8a, 0x34, 0x7a, 0x0c, 0x86, 0x52, 0x6d, 0x9b, 0x5e,
	0xf4, 0x10, 0xf4, 0x1b, 0x3e, 0xdb, 0x7c, 0x2c, 0xf4, 0x67, 0x0b, 0xac, 0x09, 0x0b, 0xc2, 0x52,
	0x86, 0xcd, 0xc7, 0x44, 0xa1, 0x87, 0x42, 0x70, 0xf1, 0x09, 0xe3, 0x98, 0xf9, 0xa5, 0x18, 0x7f,
	0x61, 0xe4, 0x04, 0x4c, 0x65, 0x7f, 0xcd, 0xc6, 0xd4, 0x55, 0x40, 0x0d, 0xec, 0x58, 0xff, 0x09,
	0x98, 0x33, 0xe6, 0x2e, 0xa4, 0x60, 0x2e, 0xda, 0xc6, 0xa9, 0x9e, 0xe5, 0x54, 0x00, 0xb5, 0xa1,
	0x3d, 0x0d, 0x22, 0x3f, 0xdb, 0xe0, 0x32, 0xf6, 0xcb, 0x0d, 0x2e, 0x63, 0x5f, 0x79, 0x78, 0xed,
	0xd1, 0x2a, 0xcf, 0xf0, 0xb7, 0x06, 0xe6, 0x17, 0xf7, 0x0e, 0xbd, 0x24, 0x44, 0x41, 0x3e, 0x40,
	0xf7, 0x63, 0x10, 0xbb, 0x7c, 0x8d, 0x82, 0x1c, 0xd5, 0x6b, 0x6e, 0x1e, 0x4e, 0xff, 0x68, 0x90,
	0x9f, 0x59, 0xed, 0x1e, 0x67, 0x67, 0x46, 0xf7, 0xc8, 0x7b, 0x30, 0xaf, 0x04, 0x67, 0xde, 0x88,
	0xc5, 0x92, 0x1c, 0x6c, 0x7b, 0x65, 0x0f, 0x24, 0xbf, 0x04, 0x63, 0x82, 0xd2, 0xbd, 0x23, 0xfb,
	0x1b, 0x47, 0xd6, 0xdf, 0x5a, 0x89, 0xee, 0x91, 0x0b, 0xb0, 0x2e, 0xdd, 0x45, 0xc4, 0x7f, 0x84,
	0xe8, 0xf9, 0xf8, 0xcf, 0x0d, 0xdf, 0x40, 0x3b, 0x93, 0x90, 0x34, 0x8e, 0xba, 0x21, 0xe9, 0x03,
	0x89, 0x17, 0x60, 0x5e, 0x23, 0x13, 0xf2, 0x0a, 0x99, 0x24, 0x3b, 0xc2, 0x76, 0xa7, 0xcf, 0x3a,
	0x0a, 0x79, 0xfd, 0x27, 0x00, 0x00, 0xff, 0xff, 0x45, 0x5b, 0x24, 0xe3, 0xc6, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SchedulerClient is the client API for Scheduler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulerClient interface {
	Discover(ctx context.Context, in *ClientConfig, opts ...grpc.CallOption) (*empty.Empty, error)
	BroadCast(ctx context.Context, in *JobPayload, opts ...grpc.CallOption) (*empty.Empty, error)
	Fetch(ctx context.Context, in *Queue, opts ...grpc.CallOption) (*JobPayload, error)
	Acknowledge(ctx context.Context, in *JobPayload, opts ...grpc.CallOption) (*empty.Empty, error)
	Fail(ctx context.Context, in *FailPayload, opts ...grpc.CallOption) (*empty.Empty, error)
	HeartBeat(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type schedulerClient struct {
	cc grpc.ClientConnInterface
}

func NewSchedulerClient(cc grpc.ClientConnInterface) SchedulerClient {
	return &schedulerClient{cc}
}

func (c *schedulerClient) Discover(ctx context.Context, in *ClientConfig, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protobuf.Scheduler/Discover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) BroadCast(ctx context.Context, in *JobPayload, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protobuf.Scheduler/BroadCast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Fetch(ctx context.Context, in *Queue, opts ...grpc.CallOption) (*JobPayload, error) {
	out := new(JobPayload)
	err := c.cc.Invoke(ctx, "/protobuf.Scheduler/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Acknowledge(ctx context.Context, in *JobPayload, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protobuf.Scheduler/Acknowledge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Fail(ctx context.Context, in *FailPayload, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protobuf.Scheduler/Fail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) HeartBeat(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protobuf.Scheduler/HeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchedulerServer is the server API for Scheduler service.
type SchedulerServer interface {
	Discover(context.Context, *ClientConfig) (*empty.Empty, error)
	BroadCast(context.Context, *JobPayload) (*empty.Empty, error)
	Fetch(context.Context, *Queue) (*JobPayload, error)
	Acknowledge(context.Context, *JobPayload) (*empty.Empty, error)
	Fail(context.Context, *FailPayload) (*empty.Empty, error)
	HeartBeat(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedSchedulerServer can be embedded to have forward compatible implementations.
type UnimplementedSchedulerServer struct {
}

func (*UnimplementedSchedulerServer) Discover(ctx context.Context, req *ClientConfig) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Discover not implemented")
}
func (*UnimplementedSchedulerServer) BroadCast(ctx context.Context, req *JobPayload) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BroadCast not implemented")
}
func (*UnimplementedSchedulerServer) Fetch(ctx context.Context, req *Queue) (*JobPayload, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fetch not implemented")
}
func (*UnimplementedSchedulerServer) Acknowledge(ctx context.Context, req *JobPayload) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Acknowledge not implemented")
}
func (*UnimplementedSchedulerServer) Fail(ctx context.Context, req *FailPayload) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fail not implemented")
}
func (*UnimplementedSchedulerServer) HeartBeat(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HeartBeat not implemented")
}

func RegisterSchedulerServer(s *grpc.Server, srv SchedulerServer) {
	s.RegisterService(&_Scheduler_serviceDesc, srv)
}

func _Scheduler_Discover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Discover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Scheduler/Discover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Discover(ctx, req.(*ClientConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_BroadCast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).BroadCast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Scheduler/BroadCast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).BroadCast(ctx, req.(*JobPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Queue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Scheduler/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Fetch(ctx, req.(*Queue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Acknowledge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Acknowledge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Scheduler/Acknowledge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Acknowledge(ctx, req.(*JobPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Fail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Fail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Scheduler/Fail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Fail(ctx, req.(*FailPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Scheduler/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).HeartBeat(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Scheduler",
	HandlerType: (*SchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Discover",
			Handler:    _Scheduler_Discover_Handler,
		},
		{
			MethodName: "BroadCast",
			Handler:    _Scheduler_BroadCast_Handler,
		},
		{
			MethodName: "Fetch",
			Handler:    _Scheduler_Fetch_Handler,
		},
		{
			MethodName: "Acknowledge",
			Handler:    _Scheduler_Acknowledge_Handler,
		},
		{
			MethodName: "Fail",
			Handler:    _Scheduler_Fail_Handler,
		},
		{
			MethodName: "HeartBeat",
			Handler:    _Scheduler_HeartBeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
